{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 ====================================================================\
ASSIGNMENT 42: Custom Exceptions\
====================================================================\
\
QUESTION:\
Custom Exceptions\
\
(a) Create a custom exception class InvalidAgeException\
\
(b) Create another class Age and create a constructor to initialize the value of age \
\
(c) Create validate() method to throw the above exception if age < 18 \
\
(d) Create objects inside main method and invoke the validate() method\
\
(e) Provide exception handling using try-catch blocks\
\
(f) Verify the custom exception class\
\
ANSWER\
\pard\pardeftab720\sa280\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
(a) Create a custom exception class InvalidAgeException:\
\pard\pardeftab720\partightenfactor0
\cf0 java\
class InvalidAgeException extends Exception \{\
    public InvalidAgeException(String message) \{\
        super(message);\
    \}\
\}\
\
\pard\pardeftab720\sa280\partightenfactor0
\cf0 (b) Create another class Age and create a constructor to initialize the value of age:\
\pard\pardeftab720\partightenfactor0
\cf0 java\
class Age \{\
    int age;\
\
    // Constructor to initialize age\
    public Age(int age) \{\
        this.age = age;\
    \}\
\
\pard\pardeftab720\sa280\partightenfactor0
\cf0 (c) Create validate() method to throw the above exception if age < 18:\
\pard\pardeftab720\partightenfactor0
\cf0 java\
    public void validate() throws InvalidAgeException \{\
        if (age < 18) \{\
            throw new InvalidAgeException("Age is less than 18. Not valid.");\
        \} else \{\
            System.out.println("Age is valid.");\
        \}\
    \}\
\}\
\
\pard\pardeftab720\sa280\partightenfactor0
\cf0 (d) Create objects inside main method and invoke the validate() method:\
\pard\pardeftab720\partightenfactor0
\cf0 java\
public class TestAge \{\
    public static void main(String[] args) \{\
        Age person1 = new Age(16);  // Underage\
        Age person2 = new Age(20);  // Valid age\
\
\pard\pardeftab720\sa280\partightenfactor0
\cf0 (e) Provide exception handling using try-catch blocks:\
\pard\pardeftab720\partightenfactor0
\cf0 java\
        try \{\
            person1.validate();\
        \} catch (InvalidAgeException e) \{\
            System.out.println("Exception caught: " + e.getMessage());\
        \}\
\
        try \{\
            person2.validate();\
        \} catch (InvalidAgeException e) \{\
            System.out.println("Exception caught: " + e.getMessage());\
        \}\
    \}\
\}\
\
\pard\pardeftab720\sa280\partightenfactor0
\cf0 (f) Verify the custom exception class:\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 Run the full program. It will show:\
\pard\pardeftab720\partightenfactor0
\cf0 Exception caught: Age is less than 18. Not valid.\
Age is valid.\
\
Final Code:\
// (a) Custom Exception Class\
class InvalidAgeException extends Exception \{\
    public InvalidAgeException(String message) \{\
        super(message);\
    \}\
\}\
\
// (b) Class Age with constructor\
class Age \{\
    int age;\
\
    // Constructor to initialize age\
    public Age(int age) \{\
        this.age = age;\
    \}\
\
    // (c) validate() method\
    public void validate() throws InvalidAgeException \{\
        if (age < 18) \{\
            throw new InvalidAgeException("Age is less than 18. Not valid.");\
        \} else \{\
            System.out.println("Age is valid.");\
        \}\
    \}\
\}\
\
// (d), (e), (f) Main class to test and handle exception\
public class TestAge \{\
    public static void main(String[] args) \{\
        Age person1 = new Age(16);  // invalid age\
        Age person2 = new Age(20);  // valid age\
\
        try \{\
            person1.validate();\
        \} catch (InvalidAgeException e) \{\
            System.out.println("Exception caught: " + e.getMessage());\
        \}\
\
        try \{\
            person2.validate();\
        \} catch (InvalidAgeException e) \{\
            System.out.println("Exception caught: " + e.getMessage());\
        \}\
    \}\
\}\
\
Output when program is executed:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Exception caught: Age is less than 18. Not valid.\
Age is valid.\
\kerning1\expnd0\expndtw0 \
\
STUDENT DETAILS:\
Name     : Gaurav Kumar\
Email    : gk3759307@gmail.com\
Course   : Java \'96 Spoken Tutorial, IIT Bombay\
College  : Government Polytechnic Gaya \
}